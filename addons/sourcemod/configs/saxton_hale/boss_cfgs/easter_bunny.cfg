/// Boss names and panel messaging are in the translation text files.

/// '_' is optional but better to have.
/// `pl_`  prefix for player   properties, if available.
/// `gm_`  prefix for gamemode properties.
"formulas" {
	"max health"       "[(760.8 + gm_iStartingReds) * (gm_iStartingReds - 1)]^1.0341 + 2046"
	"stab damage"      "(pl_iMaxHealth * 0.0014)^2 + 899.0 - [pl_iMaxHealth * (pl_iStabbed / 100)]"
	"market garden"    "gm_iTotalMaxHealth^0.74074 / [log(gm_iStartingReds + 2) / log 25]"
}

"weapons" {
	"<enum>" {
		"classname"  "tf_weapon_bottle"
		"index"      "609" // fancy square bottle
		"level"      "100"
		"quality"    "5"
		"attributes" "68 ; 2.0; 2 ; 3.0; 259 ; 1.0; 326 ; 1.3; 252 ; 0.6"
	}
}

"abilities" {
	"rage" {
		"sounds" {
			"<enum>"   "vo/demoman_positivevocalization03.mp3"
			"<enum>"   "vo/demoman_dominationscout05.mp3"
			"<enum>"   "vo/demoman_cheers02.mp3"
		}
	}
	"anchor" {
	}
	"superjump" {
		"<enum>"       "2.5"    /// charging rate.
		"<enum>"       "25.0"   /// maximum charge for max jump power.
		"<enum>"       "-100.0" /// charge reset.
		
		"sounds" {
			"<enum>"   "vo/demoman_gibberish07.mp3"
			"<enum>"   "vo/demoman_gibberish08.mp3"
			"<enum>"   "vo/demoman_laughshort01.mp3"
			"<enum>"   "vo/demoman_positivevocalization04.mp3"
		}
	}
	"weighdown" {
		"<enum>"       "2.0"    /// time in air to allow drop.
		"<enum>"       "0.2"    /// incremental rate.
	}
	"glow" {
		"<enum>"       "0.1"    /// drain rate.
	}
	"escape_plan" {
		"<enum>"       "340.0"  /// initial speed.
		"<enum>"       "300.0"  /// minimum speed.
	}
	"stun_players" {
		"<enum>"       "320.0"  /// rage distance.
	}
	"stun_building" {
		"<enum>"       "320.0"  /// rage distance.
	}
	"auto_fire" { /// works in tandem with 'get_weapon' ability.
		"<enum>"   "models/player/saxton_hale/w_easteregg.mdl"
	}
	"get_weapon" {
		"<enum>" {
			"classname"  "tf_weapon_grenadelauncher"
			"index"      "19" // grenade lawn chair
			"level"      "100"
			"quality"    "5"
			"attributes" "2; 1.5; 6; 0.1; 411; 150.0; 413; 1.0; 37; 0.0; 280; 17; 477; 1.0; 467; 1.0; 181; 2.0; 252; 0.7"
			"ammo"       "0"
			"clip"       "50"
		}
	}
}

"models" {
	"<enum>"  "models/player/saxton_hale/easter_demo.mdl"
	"<enum>"  "models/player/saxton_hale/w_easteregg.mdl"
}

"skins" {
	"<enum>"    "materials/models/player/easter_demo/demoman_head_red"
	"<enum>"    "materials/models/player/easter_demo/easter_body"
	"<enum>"    "materials/models/player/easter_demo/easter_rabbit"
	"<enum>"    "materials/models/player/easter_demo/easter_rabbit_normal"
	"<enum>"    "materials/models/player/easter_demo/eyeball_r"
}

"sounds" {
	"intros" {
		"<enum>"   "vo/demoman_gibberish03.mp3"
		"<enum>"   "vo/demoman_gibberish11.mp3"
	}
	"backstab" {
		"<enum>"   "vo/demoman_sf12_badmagic01.mp3"
		"<enum>"   "vo/demoman_sf12_badmagic07.mp3"
		"<enum>"   "vo/demoman_sf12_badmagic10.mp3"
	}
	"spree" {
		"<enum>"   "vo/demoman_gibberish05.mp3"
		"<enum>"   "vo/demoman_gibberish06.mp3"
		"<enum>"   "vo/demoman_gibberish09.mp3"
		"<enum>"   "vo/demoman_gibberish11.mp3"
		"<enum>"   "vo/demoman_gibberish13.mp3"
		"<enum>"   "vo/demoman_autodejectedtie01.mp3"
	}
	"lastplayer" {
		"<enum>"   "vo/taunts/demoman_taunts05.mp3"
		"<enum>"   "vo/taunts/demoman_taunts04.mp3"
		"<enum>"   "vo/demoman_specialcompleted07.mp3"
	}
	"win" {
		"<enum>"   "vo/demoman_gibberish01.mp3"
		"<enum>"   "vo/demoman_gibberish12.mp3"
		"<enum>"   "vo/demoman_cheers02.mp3"
		"<enum>"   "vo/demoman_cheers03.mp3"
		"<enum>"   "vo/demoman_cheers06.mp3"
		"<enum>"   "vo/demoman_cheers07.mp3"
		"<enum>"   "vo/demoman_cheers08.mp3"
		"<enum>"   "vo/taunts/demoman_taunts12.mp3"
	}
	"kill" {
		"<enum>" { /// all/random
			"random" {
				/// the math calculations here can use victim, attacker, and gamemode properties.
				/// example: "gm_iStartingReds", "victim_iHealth", "attacker_iKills".
				"math"     "irandom(4.0)" /// 'irandom' returns rounded decimal numbers from 0 to max.
				"needed"   "3.0"   /// the sounds will only play if math calculation is larger or equal to 3.0
				"sounds" {
					"<enum>"   "vo/demoman_gibberish09.mp3"
					"<enum>"   "vo/demoman_cheers02.mp3"
					"<enum>"   "vo/demoman_cheers07.mp3"
					"<enum>"   "vo/demoman_positivevocalization03.mp3"
				}
			}
		}
	}
	// ??? 
	"randomvoice" {
		"<enum>"   "vo/demoman_positivevocalization03.mp3"
		"<enum>"   "vo/demoman_jeers08.mp3"
		"<enum>"   "vo/demoman_gibberish03.mp3"
		"<enum>"   "vo/demoman_cheers07.mp3"
		"<enum>"   "vo/demoman_sf12_badmagic01.mp3"
		"<enum>"   "vo/burp02.mp3"
		"<enum>"   "vo/burp03.mp3"
		"<enum>"   "vo/burp04.mp3"
		"<enum>"   "vo/burp05.mp3"
		"<enum>"   "vo/burp06.mp3"
		"<enum>"   "vo/burp07.mp3"
	}
	"death" {
		"<enum>"   "vo/demoman_gibberish04.mp3"
		"<enum>"   "vo/demoman_gibberish10.mp3"
		"<enum>"   "vo/demoman_jeers03.mp3"
		"<enum>"   "vo/demoman_jeers06.mp3"
		"<enum>"   "vo/demoman_jeers07.mp3"
		"<enum>"   "vo/demoman_jeers08.mp3"
	}
	/* ??? No theme?
	"music" {
		""   "140.0"
	}
	*/
}